// Mocks generated by Mockito 5.4.6 from annotations
// in eden_updater/test/core/platform/implementations/android/android_launcher_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:eden_updater/services/storage/preferences_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesService extends _i1.Mock
    implements _i2.PreferencesService {
  MockPreferencesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String?> getCurrentVersion(String? channel) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentVersion, [channel]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> setCurrentVersion(String? channel, String? version) =>
      (super.noSuchMethod(
            Invocation.method(#setCurrentVersion, [channel, version]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getInstallPath() =>
      (super.noSuchMethod(
            Invocation.method(#getInstallPath, []),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> setInstallPath(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#setInstallPath, [path]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String> getReleaseChannel() =>
      (super.noSuchMethod(
            Invocation.method(#getReleaseChannel, []),
            returnValue: _i3.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#getReleaseChannel, []),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<void> setReleaseChannel(String? channel) =>
      (super.noSuchMethod(
            Invocation.method(#setReleaseChannel, [channel]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getEdenExecutablePath(String? channel) =>
      (super.noSuchMethod(
            Invocation.method(#getEdenExecutablePath, [channel]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> setEdenExecutablePath(String? channel, String? path) =>
      (super.noSuchMethod(
            Invocation.method(#setEdenExecutablePath, [channel, path]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<bool> getCreateShortcutsPreference() =>
      (super.noSuchMethod(
            Invocation.method(#getCreateShortcutsPreference, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> setCreateShortcutsPreference(bool? createShortcuts) =>
      (super.noSuchMethod(
            Invocation.method(#setCreateShortcutsPreference, [createShortcuts]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> clearVersionInfo(String? channel) =>
      (super.noSuchMethod(
            Invocation.method(#clearVersionInfo, [channel]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<String?> getString(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getString, [key]),
            returnValue: _i3.Future<String?>.value(),
          )
          as _i3.Future<String?>);

  @override
  _i3.Future<void> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
